/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as MyImport } from './routes/my'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'
import { Route as VolunteerIndexImport } from './routes/volunteer/index'
import { Route as VolunteerNewImport } from './routes/volunteer/new'
import { Route as AgencyNewImport } from './routes/agency/new'
import { Route as VolunteerVolunteerIdIndexImport } from './routes/volunteer/$volunteerId/index'
import { Route as AgencyAgencyIdIndexImport } from './routes/agency/$agencyId/index'
import { Route as VolunteerVolunteerIdRequestImport } from './routes/volunteer/$volunteerId/request'
import { Route as VolunteerVolunteerIdHistoryImport } from './routes/volunteer/$volunteerId/history'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const MyRoute = MyImport.update({
  id: '/my',
  path: '/my',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const VolunteerIndexRoute = VolunteerIndexImport.update({
  id: '/volunteer/',
  path: '/volunteer/',
  getParentRoute: () => rootRoute,
} as any)

const VolunteerNewRoute = VolunteerNewImport.update({
  id: '/volunteer/new',
  path: '/volunteer/new',
  getParentRoute: () => rootRoute,
} as any)

const AgencyNewRoute = AgencyNewImport.update({
  id: '/agency/new',
  path: '/agency/new',
  getParentRoute: () => rootRoute,
} as any)

const VolunteerVolunteerIdIndexRoute = VolunteerVolunteerIdIndexImport.update({
  id: '/volunteer/$volunteerId/',
  path: '/volunteer/$volunteerId/',
  getParentRoute: () => rootRoute,
} as any)

const AgencyAgencyIdIndexRoute = AgencyAgencyIdIndexImport.update({
  id: '/agency/$agencyId/',
  path: '/agency/$agencyId/',
  getParentRoute: () => rootRoute,
} as any)

const VolunteerVolunteerIdRequestRoute =
  VolunteerVolunteerIdRequestImport.update({
    id: '/volunteer/$volunteerId/request',
    path: '/volunteer/$volunteerId/request',
    getParentRoute: () => rootRoute,
  } as any)

const VolunteerVolunteerIdHistoryRoute =
  VolunteerVolunteerIdHistoryImport.update({
    id: '/volunteer/$volunteerId/history',
    path: '/volunteer/$volunteerId/history',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/my': {
      id: '/my'
      path: '/my'
      fullPath: '/my'
      preLoaderRoute: typeof MyImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/agency/new': {
      id: '/agency/new'
      path: '/agency/new'
      fullPath: '/agency/new'
      preLoaderRoute: typeof AgencyNewImport
      parentRoute: typeof rootRoute
    }
    '/volunteer/new': {
      id: '/volunteer/new'
      path: '/volunteer/new'
      fullPath: '/volunteer/new'
      preLoaderRoute: typeof VolunteerNewImport
      parentRoute: typeof rootRoute
    }
    '/volunteer/': {
      id: '/volunteer/'
      path: '/volunteer'
      fullPath: '/volunteer'
      preLoaderRoute: typeof VolunteerIndexImport
      parentRoute: typeof rootRoute
    }
    '/volunteer/$volunteerId/history': {
      id: '/volunteer/$volunteerId/history'
      path: '/volunteer/$volunteerId/history'
      fullPath: '/volunteer/$volunteerId/history'
      preLoaderRoute: typeof VolunteerVolunteerIdHistoryImport
      parentRoute: typeof rootRoute
    }
    '/volunteer/$volunteerId/request': {
      id: '/volunteer/$volunteerId/request'
      path: '/volunteer/$volunteerId/request'
      fullPath: '/volunteer/$volunteerId/request'
      preLoaderRoute: typeof VolunteerVolunteerIdRequestImport
      parentRoute: typeof rootRoute
    }
    '/agency/$agencyId/': {
      id: '/agency/$agencyId/'
      path: '/agency/$agencyId'
      fullPath: '/agency/$agencyId'
      preLoaderRoute: typeof AgencyAgencyIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/volunteer/$volunteerId/': {
      id: '/volunteer/$volunteerId/'
      path: '/volunteer/$volunteerId'
      fullPath: '/volunteer/$volunteerId'
      preLoaderRoute: typeof VolunteerVolunteerIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/my': typeof MyRoute
  '/signup': typeof SignupRoute
  '/agency/new': typeof AgencyNewRoute
  '/volunteer/new': typeof VolunteerNewRoute
  '/volunteer': typeof VolunteerIndexRoute
  '/volunteer/$volunteerId/history': typeof VolunteerVolunteerIdHistoryRoute
  '/volunteer/$volunteerId/request': typeof VolunteerVolunteerIdRequestRoute
  '/agency/$agencyId': typeof AgencyAgencyIdIndexRoute
  '/volunteer/$volunteerId': typeof VolunteerVolunteerIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/my': typeof MyRoute
  '/signup': typeof SignupRoute
  '/agency/new': typeof AgencyNewRoute
  '/volunteer/new': typeof VolunteerNewRoute
  '/volunteer': typeof VolunteerIndexRoute
  '/volunteer/$volunteerId/history': typeof VolunteerVolunteerIdHistoryRoute
  '/volunteer/$volunteerId/request': typeof VolunteerVolunteerIdRequestRoute
  '/agency/$agencyId': typeof AgencyAgencyIdIndexRoute
  '/volunteer/$volunteerId': typeof VolunteerVolunteerIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/my': typeof MyRoute
  '/signup': typeof SignupRoute
  '/agency/new': typeof AgencyNewRoute
  '/volunteer/new': typeof VolunteerNewRoute
  '/volunteer/': typeof VolunteerIndexRoute
  '/volunteer/$volunteerId/history': typeof VolunteerVolunteerIdHistoryRoute
  '/volunteer/$volunteerId/request': typeof VolunteerVolunteerIdRequestRoute
  '/agency/$agencyId/': typeof AgencyAgencyIdIndexRoute
  '/volunteer/$volunteerId/': typeof VolunteerVolunteerIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/my'
    | '/signup'
    | '/agency/new'
    | '/volunteer/new'
    | '/volunteer'
    | '/volunteer/$volunteerId/history'
    | '/volunteer/$volunteerId/request'
    | '/agency/$agencyId'
    | '/volunteer/$volunteerId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/my'
    | '/signup'
    | '/agency/new'
    | '/volunteer/new'
    | '/volunteer'
    | '/volunteer/$volunteerId/history'
    | '/volunteer/$volunteerId/request'
    | '/agency/$agencyId'
    | '/volunteer/$volunteerId'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/my'
    | '/signup'
    | '/agency/new'
    | '/volunteer/new'
    | '/volunteer/'
    | '/volunteer/$volunteerId/history'
    | '/volunteer/$volunteerId/request'
    | '/agency/$agencyId/'
    | '/volunteer/$volunteerId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  MyRoute: typeof MyRoute
  SignupRoute: typeof SignupRoute
  AgencyNewRoute: typeof AgencyNewRoute
  VolunteerNewRoute: typeof VolunteerNewRoute
  VolunteerIndexRoute: typeof VolunteerIndexRoute
  VolunteerVolunteerIdHistoryRoute: typeof VolunteerVolunteerIdHistoryRoute
  VolunteerVolunteerIdRequestRoute: typeof VolunteerVolunteerIdRequestRoute
  AgencyAgencyIdIndexRoute: typeof AgencyAgencyIdIndexRoute
  VolunteerVolunteerIdIndexRoute: typeof VolunteerVolunteerIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  MyRoute: MyRoute,
  SignupRoute: SignupRoute,
  AgencyNewRoute: AgencyNewRoute,
  VolunteerNewRoute: VolunteerNewRoute,
  VolunteerIndexRoute: VolunteerIndexRoute,
  VolunteerVolunteerIdHistoryRoute: VolunteerVolunteerIdHistoryRoute,
  VolunteerVolunteerIdRequestRoute: VolunteerVolunteerIdRequestRoute,
  AgencyAgencyIdIndexRoute: AgencyAgencyIdIndexRoute,
  VolunteerVolunteerIdIndexRoute: VolunteerVolunteerIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/my",
        "/signup",
        "/agency/new",
        "/volunteer/new",
        "/volunteer/",
        "/volunteer/$volunteerId/history",
        "/volunteer/$volunteerId/request",
        "/agency/$agencyId/",
        "/volunteer/$volunteerId/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/my": {
      "filePath": "my.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/agency/new": {
      "filePath": "agency/new.tsx"
    },
    "/volunteer/new": {
      "filePath": "volunteer/new.tsx"
    },
    "/volunteer/": {
      "filePath": "volunteer/index.tsx"
    },
    "/volunteer/$volunteerId/history": {
      "filePath": "volunteer/$volunteerId/history.tsx"
    },
    "/volunteer/$volunteerId/request": {
      "filePath": "volunteer/$volunteerId/request.tsx"
    },
    "/agency/$agencyId/": {
      "filePath": "agency/$agencyId/index.tsx"
    },
    "/volunteer/$volunteerId/": {
      "filePath": "volunteer/$volunteerId/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
